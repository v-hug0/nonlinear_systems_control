%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% mobile robot control on a reference path 
%%% Victor Hugo, 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

clear all
close all
clc

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%           Coeficientes do controlador 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

pvar e1 e2 e4 e5
e_n=[e1;e2;e4;e5];
Ur = [0.2;0.2];
ubar = Ur;
f = [Ur(1)*(e5+1); Ur(1)*e4; Ur(2)*(e5+1); -Ur(2)*e4];
g = [-1 e2; 0 -e1; 0 -e5-1; 0 e4];

n = size(f,2);
m = size(g,2);

% V inicial 

%z = monomials(e_n,1:2);
%V = z'*z;
V = e_n'*e_n;
Vo = 100*ones(length(monomials(e_n,2:4)),1);
i = 0;
i_max = 100;
uo = ones(length(monomials(e_n,1:4)),m)*100;
while i<i_max
    % solving with SOSTOOLS (V fixed)
    prog = sosprogram(e_n);
    [prog,u1] = sospolyvar(prog,[monomials(e_n,1:4)],'wscoeff');
    [prog,u2] = sospolyvar(prog,[monomials(e_n,1:4)],'wscoeff');
    u=[u1;u2];
    [prog,l2] = sospolyvar(prog,[monomials(e_n,2:4)],'wscoeff');
    [prog,s1] = sospolyvar(prog, [monomials(e_n,2:4)],'wscoeff');
    g1 = e4^2+e5^2-1;
    % SOS constraints
    gradV = [diff(V,e1) diff(V,e2) diff(V,e4) diff(V,e5)];
    dV = -gradV*(f+g*(u+ubar))-s1*g1-l2;
    prog = sosineq(prog,dV);
    % first solution (u)
    sol = sossolve(prog);
    u = sosgetsol(sol,u);
    % solving with SOSTOOLS (u fixed)
    prog = sosprogram(e_n);
    [prog,V] = sospolyvar(prog,[monomials(e_n,2:4)],'wscoeff');
    [prog,l1] = sospolyvar(prog,[monomials(e_n,2:4)],'wscoeff');
    [prog,l2] = sospolyvar(prog,[monomials(e_n,2:4)],'wscoeff');
    [prog,s1] = sospolyvar(prog, [monomials(e_n,2:4)], 'wscoeff');

    g1 = e4^2+e5^2-1;
    % SOS constraints
    prog = sosineq(prog,V);
    gradV = [diff(V,e1) diff(V,e2) diff(V,e4) diff(V,e5)];
    dV = -gradV*(f+g*(u+ubar))-s1*g1-l2;
    prog = sosineq(prog,dV);
    prog = sosineq(prog,V-l1);
    % first solution (V)
    sol = sossolve(prog);
    V = sosgetsol(sol,V);
    %delta_V = max(abs(full(V.coefficient)-Vo))
    delta = max(abs(full(u.coefficient)-uo))
    if delta<0.1
        break
    end
    %Vo = full(V.coefficient);
    uo = full(u.coefficient);
    i = i+1
end

%%
format long g     

% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%            Inicializacao de Variveis
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Ts = 0.1;          % sampling time
Tsim = 0;   %90      % tempo de simula��o
h = 0.1;           % integrating time


xr = [1;1;0];
Xr = xr;         %Euler

% The next loop difines the reference
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%           Geracao da trajetoria
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

for k = 1:round(Tsim/h)  % 1 a tempo de simula��o/ tempo de integra��o   
    vr(k) = 0.2;
    wr(k) = 0.2;
    Xr = [Xr xr+h*([vr(k)*cos(xr(3));vr(k)*sin(xr(3));wr(k)])];  %Euler
    xr = Xr(:,k+1);
end
Ur = [vr;wr];
hold on
plot(Xr(1,:),Xr(2,:),'')



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                   Simulacao do robo.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

xo = [0;0;0];
x = xo;
X = x;
v = [];
w = [];
ubar = [0.2;0.2];

for k = 1:(round(Tsim/h))    % 1 a tempo de simula��o/ tempo de integra��o  
    
    a = Xr(:,k)-x;
    E1 = cos(x(3))*a(1)+sin(x(3))*a(1);
    E2 = -sin(x(3))*a(1)+cos(x(3))*a(2);
    E3 = a(3);
    E4 = sin(E3);
    E5 = cos(E3);
  
    %THE BEST
    %v(k) = 0.013442*E1^4 - 0.019665*E1^3*E2 + 0.029614*E1^3*E4 - 0.025974*E1^3*(E5-1) - 0.041549*E1^2*E2^2 + 0.023613*E1^2*E2*(E5-1) + 0.021014*E1^2*E4^2 - 0.025727*E1^2*E4*(E5-1) + 0.015364*E1^2*(E5-1)^2 + 0.015864*E1*E2^2*E4 + 0.027221*E1*E2^2*(E5-1) - 0.020093*E1*E2*E4^2 - 0.016097*E1*E2*(E5-1)^2 + 0.67343*E1^3 - 0.25923*E1^2*E2 - 0.15171*E1^2*E4 + 0.33749*E1*E2^2 - 0.45396*E1*E2*E4 - 0.029917*E1*E2*(E5-1) + 0.4831*E1*E4^2 + 0.09248*E1*E4*(E5-1) + 0.34277*E1*(E5-1)^2 - 0.045804*E2^3 + 0.30128*E2^2*E4 - 0.17929*E2^2*(E5-1) - 0.10839*E2*E4^2 + 0.12175*E2*E4*(E5-1) + 0.098649*E2*(E5-1)^2 - 0.082531*E4^3 + 0.13755*E4^2*(E5-1) + 0.042982*E4*(E5-1)^2 + 0.091173*(E5-1)^3 + 0.83372*E1^2 - 0.1461*E1*E2 + 0.090158*E1*(E5-1) - 0.1035*E2^2 - 0.049459*E2*(E5-1) + 0.032868*E4^2 - 0.025278*E4*(E5-1) - 0.16313*(E5-1)^2 + 0.71108*E1 - 0.16272*E2 - 0.11674*E4 + 0.13231*(E5-1) + ubar(1);
    %w(k) = -0.029887*E1^4 + 0.072118*E1^3*E2 - 0.035325*E1^3*E4 + 0.041497*E1^3*(E5-1) + 0.01483*E1^2*E2^2 - 0.032196*E1^2*E2*E4 - 0.045756*E1^2*E2*(E5-1) - 0.016717*E1^2*(E5-1)^2 + 0.012312*E1*E2^3 - 0.017288*E1*E2^2*E4 - 0.012143*E1*E2^2*(E5-1) + 0.017947*E1*E2*E4^2 + 0.022851*E1*E2*E4*(E5-1) + 0.024671*E1*E2*(E5-1)^2 + 0.55256*E1^3 + 0.93828*E1^2*E2 - 0.3039*E1^2*E4 - 0.22142*E1^2*(E5-1) - 0.014085*E1*E2^2 + 0.024162*E1*E2*E4 - 0.31575*E1*E2*(E5-1) + 0.15547*E1*E4^2 - 0.10158*E1*E4*(E5-1) + 0.081527*E1*(E5-1)^2 + 0.75399*E2^3 - 0.22347*E2^2*E4 + 0.12089*E2^2*(E5-1) - 0.18799*E2*E4^2 - 0.12983*E2*E4*(E5-1) - 0.30545*E2*(E5-1)^2 - 0.092988*E4^3 - 0.29806*E4^2*(E5-1) - 0.3725*E4*(E5-1)^2 - 0.15794*(E5-1)^3 + 0.036311*E1^2 - 0.13594*E1*E2 + 0.11769*E1*E4 + 0.063842*E1*(E5-1) + 0.016413*E2^2 - 0.094787*E2*E4 + 0.027193*E2*(E5-1) + 0.040325*E4^2 + 0.041555*E4*(E5-1) + 0.11754*(E5-1)^2 - 0.14323*E1 + 1.1949*E2 + 0.9934*E4 + 0.10656*(E5-1) + ubar(2);

    %THE BEST (FILTERED)  --- results are very close
    %v(k) = 0.67343*E1^3 - 0.25923*E1^2*E2 - 0.15171*E1^2*E4 + 0.33749*E1*E2^2 - 0.45396*E1*E2*E4 + 0.4831*E1*E4^2 + 0.34277*E1*(E5-1)^2 + 0.30128*E2^2*E4 - 0.17929*E2^2*(E5-1) - 0.10839*E2*E4^2 + 0.12175*E2*E4*(E5-1) + 0.13755*E4^2*(E5-1) + 0.83372*E1^2 - 0.1461*E1*E2 - 0.1035*E2^2 - 0.16313*(E5-1)^2 + 0.71108*E1 - 0.16272*E2 - 0.11674*E4 + 0.13231*(E5-1) + ubar(1);
    %w(k) = 0.55256*E1^3 + 0.93828*E1^2*E2 - 0.3039*E1^2*E4 - 0.22142*E1^2*(E5-1) - 0.31575*E1*E2*(E5-1) + 0.15547*E1*E4^2 - 0.10158*E1*E4*(E5-1) + 0.75399*E2^3 - 0.22347*E2^2*E4 + 0.12089*E2^2*(E5-1) - 0.18799*E2*E4^2 - 0.12983*E2*E4*(E5-1) - 0.30545*E2*(E5-1)^2 - 0.29806*E4^2*(E5-1) - 0.3725*E4*(E5-1)^2 - 0.15794*(E5-1)^3 - 0.13594*E1*E2 + 0.11769*E1*E4 + 0.11754*(E5-1)^2 - 0.14323*E1 + 1.1949*E2 + 0.9934*E4 + 0.10656*(E5-1) + ubar(2);
    
    v(k) = 0.014704*E1^4 + 0.014739*E1^3*E2 + 0.041871*E1^3*E4 - 0.010363*E1^3*(E5-1) - 0.044937*E1^2*E2^2 - 0.033874*E1^2*E2*E4 - 0.0013738*E1^2*E2*(E5-1) + 0.018698*E1^2*E4^2 - 0.011914*E1^2*E4*(E5-1) + 0.0036156*E1^2*(E5-1)^2 - 0.0061467*E1*E2^3 - 0.0106*E1*E2^2*E4 + 0.020742*E1*E2^2*(E5-1) - 0.008508*E1*E2*E4^2 + 0.0072611*E1*E2*E4*(E5-1) - 0.0065171*E1*E2*(E5-1)^2 + 0.0022173*E1*E4^3 - 0.002936*E1*E4^2*(E5-1) - 0.00020514*E1*E4*(E5-1)^2 - 1.3592E-05*E1*(E5-1)^3 - 9.0959E-05*E2^4 - 0.00042868*E2^3*E4 + 0.0017497*E2^3*(E5-1) - 0.00095998*E2^2*E4^2 + 0.0016813*E2^2*E4*(E5-1) - 0.0023885*E2^2*(E5-1)^2 - 0.00028656*E2*E4^3 + 0.0011701*E2*E4^2*(E5-1) - 0.00083213*E2*E4*(E5-1)^2 + 0.0013169*E2*(E5-1)^3 + 3.8109E-05*E4^4 - 0.00011409*E4^3*(E5-1) - 0.00015461*E4^2*(E5-1)^2 + 0.00014418*E4*(E5-1)^3 - 0.00016375*(E5-1)^4 + 0.62787*E1^3 + 0.11666*E1^2*E2 - 0.16841*E1^2*E4 - 0.026555*E1^2*(E5-1) + 0.61354*E1*E2^2 - 0.1199*E1*E2*E4 + 0.11627*E1*E2*(E5-1) + 0.25561*E1*E4^2 + 0.10201*E1*E4*(E5-1) + 0.36299*E1*(E5-1)^2 - 0.092216*E2^3 + 0.11157*E2^2*E4 + 0.003416*E2^2*(E5-1) + 0.024289*E2*E4^2 + 0.046596*E2*E4*(E5-1) + 0.043514*E2*(E5-1)^2 - 0.046153*E4^3 - 0.085691*E4^2*(E5-1) - 0.047909*E4*(E5-1)^2 - 0.0012792*(E5-1)^3 + 0.95324*E1^2 + 0.0098554*E1*E2 + 0.04197*E1*E4 + 0.037734*E1*(E5-1) + 0.29933*E2^2 + 0.26278*E2*E4 + 0.0032176*E2*(E5-1) + 0.23029*E4^2 - 0.02846*E4*(E5-1) - 0.10174*(E5-1)^2 + 0.70856*E1 - 0.06378*E2 - 0.13847*E4 + 0.17023*(E5-1) + ubar(1);
    w(k) = -0.052768*E1^4 + 0.063234*E1^3*E2 - 0.026762*E1^3*E4 + 0.020141*E1^3*(E5-1) + 0.009166*E1^2*E2^2 + 0.012954*E1^2*E2*E4 - 0.025276*E1^2*E2*(E5-1) - 0.0065078*E1^2*E4^2 + 0.0073659*E1^2*E4*(E5-1) - 0.003912*E1^2*(E5-1)^2 + 0.0072929*E1*E2^3 - 0.0014027*E1*E2^2*E4 - 0.0030085*E1*E2^2*(E5-1) + 0.0049694*E1*E2*E4^2 - 0.0026913*E1*E2*E4*(E5-1) + 0.0093862*E1*E2*(E5-1)^2 - 0.0012089*E1*E4^3 + 0.00085922*E1*E4^2*(E5-1) - 0.0018185*E1*E4*(E5-1)^2 - 5.6357E-05*E1*(E5-1)^3 + 0.00078871*E2^4 + 0.00021504*E2^3*E4 - 0.0010345*E2^3*(E5-1) + 0.00045324*E2^2*E4^2 + 0.00012168*E2^2*E4*(E5-1) + 0.0012277*E2^2*(E5-1)^2 + 0.00022547*E2*E4^3 - 0.00063993*E2*E4^2*(E5-1) + 0.0003781*E2*E4*(E5-1)^2 - 0.0010252*E2*(E5-1)^3 - 6.3103E-05*E4^4 + 4.4949E-05*E4^3*(E5-1) + 0.0001057*E4^2*(E5-1)^2 + 6.8342E-05*E4*(E5-1)^3 + 0.00025903*(E5-1)^4 + 0.098657*E1^3 - 0.622*E1^2*E2 + 0.50259*E1^2*E4 - 0.25819*E1^2*(E5-1) - 0.13463*E1*E2^2 - 0.025735*E1*E2*E4 - 0.13884*E1*E2*(E5-1) + 0.028522*E1*E4^2 + 0.10309*E1*E4*(E5-1) + 0.12579*E1*(E5-1)^2 + 0.88516*E2^3 - 0.63918*E2^2*E4 + 0.31273*E2^2*(E5-1) - 0.20112*E2*E4^2 - 0.14251*E2*E4*(E5-1) - 0.35041*E2*(E5-1)^2 + 0.29985*E4^3 - 0.035565*E4^2*(E5-1) - 0.049028*E4*(E5-1)^2 - 0.07632*(E5-1)^3 - 0.07907*E1^2 + 0.22063*E1*E2 - 0.61028*E1*E4 + 0.18821*E1*(E5-1) - 0.021001*E2^2 - 0.065019*E2*E4 + 0.095827*E2*(E5-1) + 0.076505*E4^2 - 0.064563*E4*(E5-1) + 0.1408*(E5-1)^2 - 0.1328*E1 + 1.2624*E2 + 0.96468*E4 + 0.12192*(E5-1) + ubar(2);
    
    % dissipatividade
    %v(k) = -0.0051738*E1^2 - 0.0021226*E1*E2 - 0.026702*E1*E3 + 0.2642*E1*E4 + 1.2022*E1*(E5-1) - 0.018476*E2^2 + 0.0083082*E2*E3 + 0.04823*E2*E4 + 0.016441*E2*(E5-1) - 0.0040279*E3^2 + 0.0065559*E3*E4 - 0.0061168*E3*(E5-1) - 0.023727*E4^2 - 0.013772*E4*(E5-1) - 0.046528*(E5-1)^2 + 4.0633*E1 - 0.50829*E2 + 0.1346*E3 + 0.08552*E4 - 0.060523*(E5-1) + ubar(1);
    %w(k) = 0.91726*E2^2 - 0.13194*E2*E3 - 0.070694*E2*E4 - 0.044194*E3^2 + 0.021534*E3*E4 + 0.016843*E4^2 - 0.016826*E2 + 3.5761*E3 + 0.91726*E4 + ubar(2);

    X = [X x+Ts*[v(k)*cos(x(3));v(k)*sin(x(3));w(k)]];
    x = X(:,k+1);
    
    Erro(:,k) = Xr(:,k+1)- X(:,k+1);
   
end


plot(X(1,:),X(2,:),'r')
legend('rungeKutta','trajetoria do robo')
xlabel('x[m]')
ylabel('y[m]')

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%      Plotagem de v e w 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

figure
ne = length(Erro);
tempo = Ts*(0:ne-1);
subplot(2,1,1)
plot(tempo,v,'b')
legend('v')

hold on
subplot(2,1,2)
plot (tempo,w,'r')
legend('w')

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%      Plotagem do erro x y e theta
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

figure
plot(tempo,Erro(1,:),tempo,Erro(2,:),tempo,Erro(3,:));
legend('x','y','theta')

 EE1 = Erro(1,:);
 EE2 = Erro(2,:);
 EE3 = Erro(3,:);